{
	"name": "GetObjectListAndRunDbCopy_PL",
	"properties": {
		"description": "Step 1. Gets a list of database objects for extraction and executes the Copy pipeline. One object list per Database.",
		"activities": [
			{
				"name": "LookupObjectList",
				"description": "Calls a stored proc to get the objects to be loaded from the data source..",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "RecordStartOfDatabaseCopy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "EXEC [state].[GetObjectListById] @{pipeline().parameters.databaseId}, @{pipeline().parameters.loadGroup}",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachActivity",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupObjectList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupObjectList').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "CopyAndIngestRawFileOrc_PL",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitOnCompletion": false,
								"parameters": {
									"objectName": {
										"value": "@item().ObjectName",
										"type": "Expression"
									},
									"objectSchema": {
										"value": "@item().ObjectSchema",
										"type": "Expression"
									},
									"databaseId": {
										"value": "@pipeline().parameters.databaseId",
										"type": "Expression"
									},
									"databaseLoadId": {
										"value": "@{activity('RecordStartOfDatabaseCopy').output.firstRow.DatabaseLoadId}",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "RecordStartOfDatabaseCopy",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Check for Schema Refresh",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 2,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "EXEC [state].[AddUpdateDatabaseExtractStatus] @databaseID = '@{pipeline().parameters.databaseId}', @databaseLoadId = NULL, @dataFactoryRunId = '@{pipeline().RunId}', @phase = 'DB_EXTRACTION', @startTimeUtc = '@{utcnow()}', @endTimeUtc = NULL, @loadGroup = @{pipeline().parameters.loadGroup}, @statusId = 1;",
							"type": "Expression"
						},
						"partitionOption": "None"
					}
				}
			},
			{
				"name": "CheckAutoSchemaRefresh",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT AutoRefreshSchema=ISNULL(AutoRefreshSchema,0)\n\t,[DNACoreTechSupportEmail]\n\t,[OperatorName]\n\t,[SourceSystemName]\n\t,[Active]\nFROM [state_config].[DatabaseList]\nWHERE DatabaseId = @{pipeline().parameters.databaseId}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					}
				}
			},
			{
				"name": "Check for Schema Refresh",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "CheckAutoSchemaRefresh",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('CheckAutoSchemaRefresh').output.firstRow.AutoRefreshSchema",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Refresh MetaData",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitOnCompletion": true,
								"parameters": {
									"databaseId": {
										"value": "@pipeline().parameters.databaseId",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SendEmailNotification_PL",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Refresh MetaData",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitOnCompletion": false,
								"parameters": {
									"EmailTo": {
										"value": "@activity('CheckAutoSchemaRefresh').output.firstRow.DNACoreTechSupportEmail",
										"type": "Expression"
									},
									"DataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"ErrorMessage": {
										"value": "@concat('Schema refresh for ',activity('CheckAutoSchemaRefresh').output.firstRow.OperatorName,'  ',activity('Refresh MetaData').output.firstRow.SourceSystemName,' failed.  Pipeline will continue to run despite the failure')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"databaseId": {
				"type": "int"
			},
			"loadGroup": {
				"type": "Int",
				"defaultValue": 1
			}
		},
		"folder": {
			"name": "DNACore/Data Source RDBMS"
		},
		"annotations": []
	}
}